{
    // golang settings
    "[go]": {
        "editor.insertSpaces": false,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    "go.formatTool": "goimports",
    "go.formatFlags": ["-w"],
    "go.lintTool": "golangci-lint",
    "go.toolsEnvVars": {"GO111MODULE": "on"},
    "go.useLanguageServer": true,
    "go.alternateTools": {"go-langserver": "gopls"},
    // python settings
    "[python]": {
        "editor.formatOnSave": true
    },
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": true,
    "python.formatting.provider": "black",
    "python.linting.mypyEnabled": true,
    "python.jediEnabled": true,
    "python.pythonPath": "${workspaceFolder}/.venv/bin/python",
    "python.venvPath": ".venv",
    // rust settings
    "[rust]": {
        "editor.formatOnSave": true
    },
    // vue.js settings
    "[vue]": {
        "editor.formatOnSave": false
    },
    "vetur.format.defaultFormatter.js": "prettier",
    "vetur.format.defaultFormatter.css": "prettier",
    "vetur.format.defaultFormatter.less": "prettier",
    "vetur.format.defaultFormatter.postcss": "prettier",
    "vetur.format.defaultFormatter.scss": "prettier",
    "vetur.format.defaultFormatter.stylus": "stylus-supremacy",
    "vetur.format.defaultFormatter.ts": "prettier",
    "vetur.validation.style": true,
    "vetur.validation.template": true,
    // eslint settings
    "eslint.run": "onType",
    "eslint.enable": true,
    "eslint.autoFixOnSave": true,
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        {
            "language":"typescript",
            "autoFix": true
        },
        {
            "language": "vue",
            "autoFix": true
        },
    ],
    // javascirpt settings
    "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
    // typescirpt settings
    "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
    // vim settings
    "vim.useSystemClipboard": true,
    "vim.hlsearch": true,
    "vim.leader": ",",
    "vim.easymotion": true,
    "vim.easymotionKeys": "hklasdgjf",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["f"],
            "after": ["leader", "leader", "s"]
        }
    ],
    "vim.insertModeKeyBindings": [
        {
          "before": ["j", "j"],
          "after": ["<Esc>"]
        },
        {
            "before": ["leader","w"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.files.save",
                    "args": []
                }
            ]
        },
    ],
    "vim.normalModeKeyBindings": [
        {
            "before": ["leader","a"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.debug.viewlet.action.removeAllBreakpoints",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","r","n"],
            "after": [],
            "commands": [
                {
                    "command": "editor.action.rename",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","b","p"],
            "after": [],
            "commands": [
                {
                    "command": "editor.debug.action.conditionalBreakpoint",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","b","b"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.start",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","b","n"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.stepOver",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader","b","s"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.debug.stop",
                    "args": []
                }
            ]
          }
    ],
    // editor settings
    "editor.fontFamily": "Fira Code",
    "editor.fontLigatures": true,
    "editor.formatOnSave": false,
    "editor.minimap.enabled": false,
    "editor.suggestSelection": "first",
    "editor.minimap.showSlider": "always",
    "editor.minimap.renderCharacters": false,
    "explorer.openEditors.visible": 0,
    // terminal settings
    "terminal.integrated.shell.osx": "/usr/local/bin/fish",
    "terminal.integrated.shell.windows": "cmd.exe",
    // workbench settings
    "workbench.editor.enablePreview": false,
    "workbench.startupEditor": "newUntitledFile",
    "workbench.iconTheme": "vscode-icons",
    // file settings
    "files.eol": "\n",
    "files.autoSave": "off",
    "files.autoGuessEncoding": true,
    // window settings
    "window.zoomLevel": 0,
    "explorer.confirmDragAndDrop": false,
}
