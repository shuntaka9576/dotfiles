# =*=*=*=*=*=*=*=*=*=*=*=*=*= Package Mangaer *=*=*=*=*=*=*=*=*=*=*=*=*=*
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0
build = 'yarn install --frozen-lockfile'
hook_add = '''
source ~/dotfiles/nvim/plugins/coc.vim
'''

# =*=*=*=*=*=*=*=*=*=*=*=*=*= Code movee *=*=*=*=*=*=*=*=*=*=*=*=*=*
[[plugins]]
repo='haya14busa/incsearch.vim'
hook_source = '''
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
'''

[[plugins]]
repo='easymotion/vim-easymotion'
hook_add = '''
" japanise move
let g:EasyMotion_use_migemo = 1

map f <Plug>(easymotion-bd-f)
nmap f <Plug>(easymotion-overwin-f)
nmap s <Plug>(easymotion-overwin-f2)

" Move to line
map L <Plug>(easymotion-bd-jk)
nmap L <Plug>(easymotion-overwin-line)

" Move to word
map  w <Plug>(easymotion-bd-w)
nmap w <Plug>(easymotion-overwin-w)

" You can use other keymappings like <C-l> instead of <CR> if you want to
" use these mappings as default search and sometimes want to move cursor with
" EasyMotion.
function! s:incsearch_config(...) abort
  return incsearch#util#deepextend(deepcopy({
        \   'modules': [incsearch#config#easymotion#module({'overwin': 1})],
        \   'keymap': {
        \     "\<CR>": '<Over>(easymotion)'
        \   },
        \   'is_expr': 0
        \ }), get(a:, 1, {}))
endfunction

noremap <silent><expr> /  incsearch#go(<SID>incsearch_config())
noremap <silent><expr> ?  incsearch#go(<SID>incsearch_config({'command': '?'}))
noremap <silent><expr> g/ incsearch#go(<SID>incsearch_config({'is_stay': 1}))
'''

[[plugins]]
repo='haya14busa/incsearch-easymotion.vim'
depends = ['incsearch.vim', 'easymotion/vim-easymotion']
hook_add = '''
map z/ <Plug>(incsearch-easymotion-/)
map z? <Plug>(incsearch-easymotion-?)
map zg/ <Plug>(incsearch-easymotion-stay)
'''

[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = '''
let g:gitgutter_map_keys = 0
nmap [g <Plug>GitGutterPrevHunk
nmap ]g <Plug>GitGutterNextHunk
'''

# =*=*=*=*=*=*=*=*=*=*=*=*=*= Wordpress *=*=*=*=*=*=*=*=*=*=*=*=*=*
[[plugins]]
repo = 'haoyayoi/VimWordpress'
hook_add='''
    command! BSaveDaraft execute(":BlogSave draft")
    command! BPreveiwDraft execute(":BlogPreview draft")
'''

[[plugins]]
repo='mattn/vim-goimports'

# [[plugins]]
# repo = 'habamax/vim-asciidoctor'
# hook_add = '''
# " What to use for HTML, default `asciidoctor`.
# let g:asciidoctor_executable = 'asciidoctor'
# 
# " What extensions to use for HTML, default `[]`.
# let g:asciidoctor_extensions = ['asciidoctor-diagram']
# 
# " !をつけると、コマンド上書きになり、Ascii.*系のコマンドが全て使用不可
# " command AsPreveiw AsciidoctorOpenHTML
# 
# augroup
#   autocmd!
#   autocmd BufWritePost *.adoc execute(":Asciidoctor2HTML")
# augroup END
# '''

# [[plugins]]
# repo = 'plasticboy/vim-markdown'

# [[plugins]]
# repo = 'tyru/open-browser.vim'
# 
# [[plugins]]
# repo = 'kannokanno/previm'
# hook_add = '''
# autocmd BufRead,BufNewFile *.mkd  set filetype=markdown
# autocmd BufRead,BufNewFile *.md  set filetype=markdown
# 
# " Need: kannokanno/previm
# nnoremap <silent> <C-p> :PrevimOpen<CR> " Ctrl-pでプレビュー
# 
# " 自動で折りたたまないようにする
# let g:vim_markdown_folding_disabled=1
# '''
[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build =  'cd app & yarn install'
hook_add='''
" let g:mkdp_auto_start = 1
'''

[[plugins]]
repo='xavierchow/vim-swagger-preview'

[[plugins]]
repo = 'shuntaka9576/preview-asciidoc.nvim'
build = 'yarn install'
merged = 0
hook_add='''
'''

[[plugins]]
repo = 'shuntaka9576/preview-swagger.nvim'
build = 'yarn install'

[[plugins]]
repo = 'fisadev/vim-isort'
on_ft = ['python']

[[plugins]]
repo = 'python/black'
on_ft = ['python']
hook_add='''
  autocmd BufWritePost *.py silent execute ':Black'
  autocmd BufWritePre *.py silent execute ':Black'
'''

[[plugins]]
repo = "voldikss/vim-floaterm"
hook_add ='''
let g:floaterm_keymap_new    = '<C-t>N'
let g:floaterm_keymap_prev   = '<C-t>p'
let g:floaterm_keymap_next   = '<C-t>n'
let g:floaterm_keymap_toggle = '<C-t>h'
'''
