[[plugins]]
repo='scrooloose/nerdtree'
hook_add = '''
    let NERDTreeShowHidden = 1
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
    map <C-q> <plug>NERDTreeTabsToggle<CR>

    " Don't display the NERDTree when specifying files
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
'''
depends = ['nerdtree']

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin.git'
hook_add = '''
  let g:NERDTreeIndicatorMapCustom = {
      \ "Modified"  : "✹",
      \ "Staged"    : "✚",
      \ "Untracked" : "✭",
      \ "Renamed"   : "➜",
      \ "Unmerged"  : "═",
      \ "Deleted"   : "✖",
      \ "Dirty"     : "✗",
      \ "Clean"     : "✔︎",
      \ 'Ignored'   : '☒',
      \ "Unknown"   : "?"
      \ }
'''
depends = ['nerdtree']

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
  let g:webdevicons_conceal_nerdtree_brackets = 1
  let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

  " dir-icons
  let g:WebDevIconsUnicodeDecorateFolderNodes = 1
  let g:DevIconsEnableFoldersOpenClose = 1
'''
depends = ['nerdtree']

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
'''
depends = ['nerdtree']

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'readonly', 'filename', 'modified' ],
    \             [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ] ],
    \ },
    \ }
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
let g:lightline.component_expand = {
      \  'linter_checking': 'lightline#ale#checking',
      \  'linter_warnings': 'lightline#ale#warnings',
      \  'linter_errors': 'lightline#ale#errors',
      \  'linter_ok': 'lightline#ale#ok',
      \ }
let g:lightline.component_type = {
      \     'linter_checking': 'left',
      \     'linter_warnings': 'warning',
      \     'linter_errors': 'error',
      \     'linter_ok': 'left',
      \ }
'''

[[plugins]]
repo='simeji/winresizer.git'
hook_add='''
" let g:winresizer_start_key = '<C-T>'
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    if has('unix')
        set t_Co=256
        let &t_AB="\e[48;5;%dm"
        let &t_AF="\e[38;5;%dm"
    endif

    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#show_buffers = 0
    let g:airline#extensions#tabline#tab_nr_type = 1
    let g:airline_powerline_fonts = 1
    let g:airline#extensions#ale#enabled = 1
    " Do not collapse the status line while having multiple windows
    let g:airline_inactive_collapse = 0
    let g:airline#extensions#tagbar#enabled = 1
    let g:airline#extensions#virtualenv#enabled = 1
'''

[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
    colorscheme gruvbox

    set background=dark
    set t_Co=256
    let g:ligthline = { 'colorscheme': 'gruvbox' }
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
    let g:tmux_navigator_no_mappings = 1

    nnoremap <silent> <C-w>j :TmuxNavigateDown<CR>
    nnoremap <silent> <C-w>h :TmuxNavigateLeft<CR>
    nnoremap <silent> <C-w>k :TmuxNavigateUp<CR>
    nnoremap <silent> <C-w>l :TmuxNavigateRight<CR>
    nnoremap <silent> <C-w>\\ :TmuxNavigatePrevious<CR>
'''
