[[snippets]]
  description = "特定行表示"
  command = "ls -al |awk '{print $1,$9}'"
  tag = ["awk"]
  output = ""

[[snippets]]
  description = "GOPATH modeに変更"
  command = "set --export GO111MODULE off"
  tag = ["go"]
  output = ""

[[snippets]]
  description = "Proxy環境下で、curl"
  command = "curl -v --proxy http://{adress}:{port} -o /dev/null https://www.google.com"
  tag = ["curl"]
  output = ""

[[snippets]]
  description = "curlでnoproxyを設定"
  command = 'curl -v --noproxy localhost http://localhost:3000'
  tag = ["curl"]
  output = ""

[[snippets]]
  description = "Check listening port"
  command = "lsof -i -P | grep 8888"
  tag = ["port"]
  output = ""


[[snippets]]
  description = "1行目を非表示で出力"
  command = "sed 1d {f}"
  tag = ["sed"]
  output = ""

[[snippets]]
  description = "1〜3行目を非表示で出力"
  command = "sed 1,3d {f}"
  tag = ["sed"]
  output = ""

[[snippets]]
  description = "Pythonプロジェクトを初期化"
  command = "echo '.venv'>>.gitignore;pipenv install --dev black flake8 isort python-language-server --pre;prn"
  tag = ["python"]
  output = ""

[[snippets]]
  description = "Neovimのswapファイルを削除"
  command = ' rm -rf ~/.local/share/nvim/'
  tag = ["nvim"]
  output = ""

[[snippets]]
  description = "コンテナ全停止削除"
  command = 'docker ps -aq| xargs docker stop;docker ps -aq| xargs docker rm;docker images -aq| xargs docker rmi -f;docker ps -a;docker images -a;'
  tag = ["docker"]
  output = ""

[[snippets]]
  description = "submoduleをclone"
  command = 'git submodule update --init --recursive'
  tag = ["git"]
  output = ""

# -------------------------
# Perlワンライナー
# -e 'スクリプト'： 実行するPerlスクリプトを指定
# -------------------------
[[snippets]]
  description = "改行をつける(-l)"
  command = "perl -le 'print \"Hello\"'"
  tag = ["perl"]
  output = ""

[[snippets]]
  description = "ファイルを読み込んで1行ずつ処理する(-n)"
  command = "perl -nle '$i++;print \"$i: $_\"' README.md"
  tag = ["perl"]
  output = ""

[[snippets]]
  description = "-nの機能に加えて$_をprintする(-p)"
  command = "perl -pe 's/dotfiles/aaaa/g' README.md"
  tag = ["perl"]
  output = ""

[[snippets]]
  description = "最短マッチで文字列抽出(?無しで最長マッチ)"
  command = "echo 'aaaa(cccc)aaaaa' |perl -ne 'print \"$1\" if /.*\\((.*?)\\).*/'"
  tag = ["perl"]
  output = ""

[[snippets]]
  description = "tab区切りの出力処理"
  command = "echo \"col1\\tcol2\\tcol3\" |perl -F'\\t' -lne 'print \"$F[1]\"'"
  tag = ["perl"]
  output = ""
